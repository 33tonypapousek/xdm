{
  "meta:license": [
    "Copyright 2018 Adobe Systems Incorporated. All rights reserved.",
    "This work is licensed under a Creative Commons Attribution 4.0 International (CC BY 4.0) license",
    "you may not use this file except in compliance with the License. You may obtain a copy",
    "of the License at https://creativecommons.org/licenses/by/4.0/"
  ],
  "$id": "https://ns.adobe.com/xdm/context/reportingevent",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "User Journey Reporting Event",
  "type": "object",
  "description": "The journey here refers to the workflow of the user. A journey definition can have multiple versions running at the same time. New users would enter the latest version of the journey, while old users continue the version on which they currently reside. Each journey can contain an entry and an exit step. Journey contains the steps, each step definition including the actions to be executed when entering the step. An action can be an email, SMS, push notifications, etc. An event is a trigger coming from a source over HTTP protocol. Event rules define when we can move to the next step in the journey. A step transition can be triggered by one or more events. This schema is for reporting events, actions and transitions happening inside the journey.",
  "definitions": {
    "reportingevent": {
      "properties": {
        "xdm:journeyUID": {
          "title": "Journey Identifier",
          "type": "string",
          "description": "The unique identifier for the journey created by the marketer."
        },
        "xdm:journeyVersionUID": {
          "title": "Journey version identifier",
          "type": "string",
          "description": "The unique identifier denoting the version of journey user is active on."
        },
       "xdm:timestamp": {
          "title": "Timestamp",
          "type": "string",
          "format": "Unix time in millis",
          "description":
            "The time when the event was processed in the journey"
        },
        "xdm:dataProviderType": {
          "title": "Type for the data provider",
          "type": "string",
          "description": "The type of the provider for Enrichment",
          "meta:enum": {
              "acs":"The data provider for the event is ACS",
              "adobe.io":"The data provider for the event is Adobe IO",
              "acpps":"The data provider is ACP Profile Service",
              "selfEntity":"The data provider is self contained"
          }
        },
        "xdm:dataEntityUID": {
          "title": "Unique identifier of data entity",
          "type": "string",
          "description": "The Identifier for the data entity for Enrichment"
        },
        "xdm:orgID": {
          "title": "Org-Id of the marketer",
          "type": "string",
          "description": "Adobe IMS Organization Identifier of the marketer"
        },
        "xdm:actionUID": {
          "title": "Action Identifier",
          "type": "string",
          "description": "Unique Identifier denoting the associated action."
        },
        "xdm:actionType": {
          "title": "Action Type",
          "type": "string",
          "description": "The type of action to be performed.",
          "meta:enum": {
            "scheduledNotification": "This action type allows to specify scheduled notifications and wait for the notifications as incoming events for steps",
            "httpCall": "This action type is for a HTTP call on an external system",
            "actionWithPersonalization": "This action type describes an action with personalization that will be resolved at runtime for each voyager instance",
            "parameterizedAction": "This action type decribes an action with parameterization",
            "sendJourneyNotification": "This action type is to send notification for another journey",
            "acsWriter": "The ACS writer action performs REST calls to an Adobe Campaign Standard instance to write data",
            "acsMessageCenter": "The ACS Message Center action performs REST calls to an Adobe Campaign Standard instance to send messages with Message Center"
          }
        },
        "xdm:eventId": {
          "title": "Event id",
          "type": "string",
          "description": "The Identifier for the event received"
        },
        "xdm:flowControlType": {
          "title": "Flow control",
          "type": "string",
          "description": "Flow control in the journey triggered by the event.",
          "meta:enum": {
            "End": "if the 'end' step has been reached, if this step exists",
            "Jump": "if a jump has been taken",
            "Timer": "if a transition has been applied, implying a scheduler notification",
            "Condition": "if a conditional step has been processed"
          }
        },
        "xdm:isError": {
          "title": "Error",
          "type": "boolean",
          "description": "True, if there was an error in taking an action or processing an event."
        },
        "xdm:isJourneyVersionFailure": {
          "title": "Journey Error",
          "type": "string",
          "description": "True, If there was an error handling the flow control of the journey."
        },
        "xdm:isJourneyEntered": {
          "title": "Journey Entered",
          "type": "boolean",
          "description": "True, if journey is entered."
        },
        "xdm:isJourneyExited": {
          "title": "Journey Exit",
          "type": "boolean",
          "description": "True, if journey is exited."
        },
        "xdm:isJumpAction": {
          "title": "Jump action",
          "type": "boolean",
          "description": "True, if jump has happened."
        }
      },
      "required": ["xdm:JourneyUID", "xdm:journeyVerUID", "xdm:timestamp", "xdm:orgId"]
    }
  },
  "allof": [
    {
      "$ref": "#/definitions/reportingevent"
    }
  ],
  "meta:status": "stabilizing"
}
