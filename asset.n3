#*************************************************************************
 #
 # ADOBE CONFIDENTIAL
 # ___________________
 #
 #  Copyright 2016 Adobe Systems Incorporated
 #  All Rights Reserved.
 #
 # NOTICE:  All information contained herein is, and remains
 # the property of Adobe Systems Incorporated and its suppliers,
 # if any.  The intellectual and technical concepts contained
 # herein are proprietary to Adobe Systems Incorporated and its
 # suppliers and are protected by trade secret or copyright law.
 # Dissemination of this information or reproduction of this material
 # is strictly forbidden unless prior written permission is obtained
 # from Adobe Systems Incorporated.
 #*************************************************************************/

@prefix core: <http://ns.adobe.com/adobecloud/core/1.0/> . # TODO TBD define namespace URI
@prefix meta: <http://ns.adobe.com/adobecloud/meta/1.0/> . # TODO TBD define namespace URI
@prefix xmp: <http://ns.adobe.com/xap/1.0/> .
@prefix xmpMM: <http://ns.adobe.com/xap/1.0/mm/> .
@prefix xmpRights: <http://ns.adobe.com/xap/1.0/rights/> .
@prefix stDim: <http://ns.adobe.com/xap/1.0/sType/Dimensions#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace/> .
@prefix photoshop: <http://ns.adobe.com/photoshop/1.0/> .
@prefix tiff: <http://ns.adobe.com/tiff/1.0/> .
@prefix plus: <http://ns.useplus.org/ldf/xmp/1.0/> .
@prefix cc:  <http://creativecommons.org/ns#> .
@prefix stEvt: <http://ns.adobe.com/xap/1.0/sType/ResourceEvent#> .

# TODO schema definition vocabulary: use/leverage owl:imports, rdfs:seeAlso , rdfs:isDefinedBy, skos:definition, etc ?

<> a owl:Ontology ;
  dc:title "Adobe Cloud Core Asset Data Model" ;
  rdfs:comment "An RDF/S Schema for the Adobe Cloud Core Asset Data Model" .

# RDF-compatible XSD types used in this schema, defined for documentation purposes (see https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes)

xsd:string a rdfs:Datatype ;
  rdfs:label "String" ;
  rdfs:comment "Character strings (but not all Unicode character strings)" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> .

xsd:boolean a rdfs:Datatype ;
  rdfs:label "Boolean" ;
  rdfs:comment "true, false" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "(true|false)"
    ]
  ) .

xsd:decimal a rdfs:Datatype ;
  rdfs:label "Decimal" ;
	rdfs:comment "Arbitrary-precision decimal numbers" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
	owl:withRestrictions (
		[
			xsd:pattern "[+-]?[0-9]*\\.?[0-9]*"
		]
	) .

xsd:integer a rdfs:Datatype ;
  rdfs:label "Integer" ;
	rdfs:comment "Arbitrary-size integer numbers" ;
  owl:onDatatype xsd:decimal ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "[-+]?[0-9]+"
    ] [
      xsd:fractionDigits 0
    ]
  ) .

xsd:double a rdfs:Datatype ;
  rdfs:label "Double" ;
  rdfs:comment "64-bit floating point numbers incl. ±Inf, ±0, NaN" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "[+-]?[0-9]*\\.?[0-9]*([eE][-+]?[0-9]+)"
    ]
  ) .

xsd:float a rdfs:Datatype ;
  rdfs:label "Float" ;
  rdfs:comment "32-bit floating point numbers incl. ±Inf, ±0, NaN" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:onDatatype xsd:double .

xsd:date a rdfs:Datatype ;
  rdfs:label "Date" ;
  rdfs:comment "Dates (yyyy-mm-dd) with or without timezone" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
	owl:withRestrictions (
		[
			xsd:pattern "-?[0-9][0-9][0-9][0-9]([0-9]*)?-(0[1-9]|1[0-1])-([0-3][1-9])([+-][0-1][0-9]:[0-6][0-9])?"
		]
	) .

xsd:time a rdfs:Datatype ;
  rdfs:label "Time" ;
  rdfs:comment "Times (hh:mm:ss.sss…) with or without timezone" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
	owl:withRestrictions (
		[
			xsd:pattern "[1-2][0-9]:[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]"
		]
	) .

xsd:dateTime a rdfs:Datatype ;
  rdfs:label "DateTime" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  rdfs:comment "Date and time with or without timezone" .

xsd:dateTimeStamp a rdfs:Datatype ;
  rdfs:label "DateTimeStamp" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  rdfs:comment "Date and time with required timezone" .

# derived data types

xml:lang a rdfs:Datatype ;
  owl:onDatatype xsd:string ;
  rdfs:comment """Language string as defined in IETF RFC 3066""" .

xmp:Text a rdfs:Datatype ;
  rdfs:label "Text"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A possibly empty Unicode string""" .  

xmp:AgentName a rdfs:Datatype ;
  rdfs:label "AgentName"@en ;
  owl:onDatatype xmp:Text ;
  rdfs:comment """The name of an XMP processor, a Text value.
It is recommended that the value use this format convention:
Organization Software_name Version (token;token;...)
- Organization: The name of the company or organization providing the software, no SPACEs.
- Software_name: The full name of the software, SPACEs allowed.
- version: The version of the software, no SPACEs.
- tokens: Can be used to identify an operating system, plug-in, or more detailed version information.""" .

xmp:GUID a rdfs:Datatype ;
  rdfs:label "GUID"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A string representing a “globally unique identifier”""" .

xmp:ProperName a rdfs:Datatype ;
  rdfs:label "ProperName"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A simple text value denoting the name of a person or organization.”""" .
  
core:URI a rdfs:Datatype ;
  rdfs:label "URI"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A string representing URI""" .
  
tiff:OrientationMode a rdfs:Datatype ;
  rdfs:label "OrientationMode"@en ;
  rdfs:comment """1 = Horizontal (normal)
2 = Mirror horizontal 
3 = Rotate 180 
4 = Mirror vertical 
5 = Mirror horizontal and rotate 270 CW 
6 = Rotate 90 CW 
7 = Mirror horizontal and rotate 90 CW 
8 = Rotate 270 CW""" ;
	owl:withRestrictions (
		[
			xsd:pattern "^[1-8]?$"
		]
	) .
	
tiff:ResolutionUnitChoice	a rdfs:Datatype ;
  rdfs:label "ResolutionUnitChoice"@en ;
  rdfs:comment """2 = inches
3 = centimeters""" ;
	owl:withRestrictions (
		[
			xsd:pattern "^[2-3]?$"
		]
	) .

photoshop:ColorModeChoice	a rdfs:Datatype ;
  rdfs:label "ColorModeChoice"@en ;
  rdfs:comment """0 = Bitmap
1 = Gray scale
2 = Indexed color
3 = RGB color
4 = CMYK color
7 = Multi-channel
8 = Duotone
9 = LAB color""" ;
	owl:withRestrictions (
		[
			xsd:pattern "^[0-9]?$"
		]
	) .	
  
# structures and auxiliary types/constructs

## structure for defining AliasID

core:AliasID a rdfs:Class ;
  rdfs:label "AliasID"@en ;
  rdfs:comment """A class representing structure for Alias IDs""" ;
  rdfs:subClassOf rdfs:Resource .

core:system a rdf:Property ;
  rdfs:label "System"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:AliasID ;
  rdfs:comment """A string used to identify the external systems like google, facebook etc.""" .
  
core:id a rdf:Property ;
  rdfs:label "ID"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:AliasID ;
  rdfs:comment """An Id under which external systems track the asset.""" .  

## structure for defining Hash
  
core:Hash a rdfs:Class ;
  rdfs:label "Hash"@en ;
  rdfs:comment """A class representing a hash with algorithm name and hash value.""" ;
  rdfs:subClassOf rdfs:Resource . 

core:algorithmName a rdf:Property ;
  rdfs:label "Algorithm Name"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:Hash ;
  # TODO Define the restiction over algorithm name ;
  rdfs:comment """An algorithm name used to generate hash.""" .
  
core:hashValue a rdf:Property ;
  rdfs:label "Hash value"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:Hash ;
  rdfs:comment """A hash value generated by using hash algorithm.""" .
 
## structure for defining CopyrightOwner

plus:CopyrightOwnerClass a rdfs:Class ;
  rdfs:label "CopyrightOwnerClass"@en ;
  rdfs:comment """A class representing copyright owner having name and id""" ;
  rdfs:subClassOf rdfs:Resource .

plus:CopyrightOwnerID a rdf:Property ;
  rdfs:label "CopyrightOwnerID"@en ;
  rdfs:range xmp:Text ;
  rdfs:domain core:CopyrightOwnerClass ;
  rdfs:comment """A string representing id of copyright owner.""" . 
  
plus:CopyrightOwnerName a rdf:Property ;
  rdfs:label "CopyrightOwnerName"@en ;
  rdfs:range xmp:ProperName ;
  rdfs:domain core:CopyrightOwnerClass ;
  rdfs:comment """A string representing name of copyright owner.""" . 
  
## structure for defining Dimensions as per XMP spec

xmp:Dimensions a rdfs:Class ;
  rdfs:label "Dimensions"@en ;
  rdfs:comment "A structure containing dimensions for a drawn object." .

stDim:h a rdf:Property ;
  rdfs:label "Height"@en ;
  rdfs:comment "Height magnitude" ;
  rdfs:domain xmp:Dimensions ;
  rdfs:range xsd:float .

stDim:w a rdf:Property ;
  rdfs:label "Width"@en ;
  rdfs:comment "Width magnitude" ;
  rdfs:domain xmp:Dimensions ;
  rdfs:range xsd:float .

stDim:unit a rdf:Property ;
  rdfs:label "Units"@en ;
  rdfs:comment "Units. For example: inch, mm, pixel, pica, point" ;
  rdfs:domain xmp:Dimensions ;
  rdfs:range xsd:string .

## structure for defining Rational as per XMP spec

tiff:Rational a rdfs:Class ;
  rdfs:label "Rational"@en ;
  rdfs:comment """A class representing Rational values.""" ;
  rdfs:subClassOf rdfs:Resource .

tiff:numerator a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain tiff:Rational ;
  rdfs:comment """A value representing numerator part of a rational.""" .
  
tiff:denominator a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain tiff:Rational ;
  rdfs:comment """A value representing denominator part of a rational.""" ;
  owl:withRestrictions (
		[
      xsd:pattern "[-+]?[1-9]+"
    ] [
      xsd:fractionDigits 0
    ]
	) .	
	
## structure for defining LanguageAlternative as per XMP spec

xmp:LanguageAlternativeText a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain xmp:LanguageAlternativeClass .

xmp:LanguageAlternativeLang a rdf:Property ;
  rdfs:range xml:lang ;
  rdfs:domain xmp:LanguageAlternativeClass .

xmp:LanguageAlternativeClass a rdfs:Class ;
  rdfs:subClassOf rdfs:Resource .

xmp:LanguageAlternativeItem  a rdf:Property ;
  rdfs:subPropertyOf rdf:li ;
  rdfs:range xmp:LanguageAlternativeClass ;
  rdfs:domain xmp:LanguageAlternative .

xmp:LanguageAlternative  a rdfs:Class ;
  rdfs:label "LanguageAlternative"@en ;
  rdfs:comment """An alternative array of simple text items. Language alternatives facilitate the selection of a simple text item based on a desired language.""" ;
  rdfs:subClassOf [
    a owl:Restriction ; 
    owl:onProperty xmp:LanguageAlternativeItem ;
    owl:allValuesFrom xmp:LanguageAlternativeClass ;
  ] .
  
## structure for defining ResourceEvent as per XMP spec

xmp:ResourceEvent a rdfs:Class ;
  rdfs:label "ResourceEvent"@en ;
  rdfs:comment """A structure denoting a high-level event that occurred in the processing of a resource.""" ;
  rdfs:subClassOf rdfs:Resource .

stEvt:action a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """The action that occurred. Defined values are: converted,copied, created, cropped, edited, filtered, formatted,version_updated, printed, published, managed, produced,resized, saved.New values should be verbs in the past tense.""" .

stEvt:changed a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """A semicolon-delimited list of the parts of the resource that were changed since the previous event history.If not present, presumed to be undefined. When tracking changes and the scope of the changed components is unknown, it should be assumed that anything might have changed.""" .

stEvt:instanceID a rdf:Property ;
  rdfs:range xmp:GUID ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """The value of the xmpMM:InstanceID property for the modified(output) resource.""" .

stEvt:parameters a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """Additional description of the action.""" .

stEvt:softwareAgent a rdf:Property ;
  rdfs:range xmp:AgentName ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """The software agent that performed the action.""" .

stEvt:when a rdf:Property ;
  rdfs:range xsd:dateTime ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """Timestamp of when the action occurred.For events that create or write to a file, this should be the approximate modification time of the file.""" .

## auxiliary types/constructs for defining an array of Hash

core:HashItem a rdf:Property ;
  rdfs:subPropertyOf rdf:li ;
  rdfs:range core:Hash ;
  rdfs:domain core:ListOfHash .

core:ListOfHash a rdfs:Class ;
  rdfs:label "ListOfHash"@en ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty core:HashItem ;
    owl:allValuesFrom core:Hash ;
  ] .

## auxiliary types/constructs for defining an array of ProperName

core:ProperNameItem a rdf:Property ;
  rdfs:subPropertyOf rdf:li ;
  rdfs:range xmp:ProperName ;
  rdfs:domain core:ListOfProperNames .

core:ListOfProperNames a rdfs:Class ;
  rdfs:label "ListOfProperNames"@en ;
  rdfs:comment "Ordered array of ProperName" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty core:ProperNameItem ;
    owl:allValuesFrom xmp:ProperName ;
  ] .

## auxiliary types/constructs for defining an array of AliasID
  
core:AliasIDItem a rdf:Property ;
  rdfs:subPropertyOf rdf:li ;
  rdfs:range core:AliasID ;
  rdfs:domain core:ListOfAliasIDs .   
  
core:ListOfAliasIDs a rdfs:Class ;
  rdfs:label "ListOfAliasIDs"@en ;
  rdfs:comment "Array of AliasID" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty core:AliasIDItem ;
    owl:allValuesFrom core:AliasID ;
  ] .

## auxiliary types/constructs for defining an array of CopyrightOwner

plus:CopyrightOwnerItem a rdf:Property ;
  rdfs:subPropertyOf rdf:li ;
  rdfs:range core:CopyrightOwnerClass ;
  rdfs:domain core:ListOfCopyrightOwners .

plus:ListOfCopyrightOwners a rdfs:Class ;
  rdfs:label "ListOfCopyrightOwners"@en ;
  rdfs:comment "Array of CopyrightOwner" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty core:CopyrightOwnerItem ;
    owl:allValuesFrom core:CopyrightOwnerClass ;
  ] .

## auxiliary types/constructs for defining an array of ResourceEvent as per XMP spec

xmp:ResourceEventItem  a rdf:Property ;
  rdfs:subPropertyOf rdf:li ;
  rdfs:range xmp:ResourceEvent ;
  rdfs:domain xmp:ResourceEventList .

xmp:ResourceEventList a rdfs:Class ;
  rdfs:label "ResourceEventList"@en ;
  rdfs:comment """ordered array of xmp:ResourceEvent""" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty xmp:ResourceEventItem ;
    owl:allValuesFrom xmp:ResourceEvent ;
  ] .

# abstract base classes for schema classes and properties

core:BaseClass a rdfs:Class ;
  rdfs:label "BaseClass"@en ;
  rdfs:comment "Base class of all Data Model Classes" ;
  rdfs:subClassOf rdfs:Resource .

core:BaseProperty a rdfs:Class ;
  rdfs:label "BaseProperty"@en ;
  rdfs:comment "Base class of all Data Model Properties" ;
  rdfs:domain core:BaseClass ;
  rdfs:range rdfs:Datatype ;
  rdfs:subClassOf rdf:Property .

# schema defintion vocabulary extensions

meta:access a rdf:Property ;
  rdfs:label "Access"@en ;
  rdfs:comment "read, write, readwrite" ;
  rdfs:domain core:BaseProperty ;
  skos:note "corresponds to RelaxNG XMP Schema" ;
  rdfs:range xsd:string .

meta:jsonName a rdf:Property ;
  rdfs:label "JSON Name"@en ;
  rdfs:comment "Name of the property in JSON serialization" ;
  rdfs:domain core:BaseProperty ;
  rdfs:range xsd:string .

meta:repositoryImmutable a rdf:Property ;
  rdfs:label "repositoryImmutable"@en ;
  # corresponds to 'Immutability' column
  rdfs:comment "resource property cannot be modified after resource creation" ;
  rdfs:domain core:BaseProperty ;
  rdfs:range xsd:boolean .

### Asset class

core:Asset a rdfs:Class ;
  rdfs:label "Asset"@en ;
  rdfs:comment "OneAdobe Cloud Asset Core Class" ;
  rdfs:subClassOf core:BaseClass .

#### Property section: Asset Identity

core:assetID a core:BaseProperty ;
  rdfs:label "Asset ID"@en ;
  rdfs:comment "A unique identifier given to every addressable asset in a given repository." ;
  rdfs:range xsd:string ;
  meta:repositoryImmutable "true" ;
  meta:jsonName "asset_id" ;
  meta:access "read" ;
  skos:note "urn:aaid:{system}:{id} - {format}:{namespace}:{system}:{id}" ;  
  #skos:example """“asset_id”:“urn:aaid:sc:US:6dc33479-13ca-4b19-b25d-c805eff8a69e”""" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .

xmpMM:DocumentID a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:isDefinedBy <http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/xmp/pdfs/XMP%20SDK%20Release%20cc-2014-12/XMPSpecificationPart1.pdf> ;
  rdfs:label "Document ID"@en ;
  rdfs:comment "It takes the value of xmpMM:DocumentID present in the XMP packet of the asset. For the assets having no XMP packet this property won't be populated." ;
  rdfs:range xmp:GUID ;
  meta:repositoryImmutable "true" ;
  meta:jsonName "document_id" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "uuid:d4546407-8e2c-4194-be3b-98ef79696e2c" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .

core:assetName a core:BaseProperty ;
  rdfs:label "Asset name"@en ;
  rdfs:comment "Name of the asset in the repository. This could be a file name or any name provided by the repository to the asset." ;
  rdfs:range xsd:string ;
  meta:jsonName "asset_name" ;
  meta:access "readwrite" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  rdfs:domain core:Asset .
  
core:aliasIDs a core:BaseProperty ;
  rdfs:label "Alias IDs"@en ;
  rdfs:comment "List of IDs under which external systems track the asset. Example of external systems : google, facebook etc." ;
  rdfs:range core:ListOfAliasIDs ;
  meta:jsonName "alias_ids" ;
  meta:access "read" ;
  skos:note "[ {system: {system}, id: {id}}, ...]" ;
  skos:example "" ;  # TODO
  rdfs:domain core:Asset .  
  
core:primaryURL a core:BaseProperty ;
  rdfs:label "Primary URL"@en ;
  rdfs:comment "The URL used to fetch the actual content of the asset. If the asset is a JPEG image, for example, then this URL is used to fetch the binary bits of the JPEG image." ;
  rdfs:range xsd:string ;
  meta:jsonName "primary_url" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .    

#### Property section: Asset Creation

xmp:CreateDate a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:isDefinedBy <http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/xmp/pdfs/XMP%20SDK%20Release%20cc-2014-12/XMPSpecificationPart1.pdf> ;
  rdfs:label "Date Created"@en ;
  #rdfs:comment "Date and Time media was originally created." ;
  rdfs:comment "The date and time the resource was created. For a digital file, this need not match a file-system creation time. For a freshly created resource, it should be close to that time, modulo the time taken to write the file. Later file transfer, copying, and so on, can make the file-system time arbitrarily different." ;
  rdfs:range xsd:dateTime ;
  meta:jsonName "create_date" ;
  meta:access "readwrite" ;
  skos:note """YYYY
YYYY-MM
YYYY-MM-DD
YYYY-MM-DDThh:mmTZD
YYYY-MM-DDThh:mm:ssTZD
YYYY-MM-DDThh:mm:ss.sTZD""" ;
  skos:example "1600" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .

core:firstUploadDate a core:BaseProperty ;
  rdfs:label "Date Initally Uploaded"@en ;    #rdfs:comment "Date and Time media was originally created." ;
  rdfs:comment """The date and time when the file was first uploaded to the cloud. It will be the server time. The Date Time property should conform to ISO 8601 standard. An example form is "2004-10-23T12:00:00-06:00".""" ;
  meta:repositoryImmutable "true" ;
  rdfs:range xsd:dateTime ;
  meta:jsonName "first_upload_date" ;
  meta:access "read" ;
  skos:note "YYYY-MM-DDThh:mm:ss.sTZD" ;
  skos:example "2016-07-12T12:13:05.123+01:00" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .
  
dc:creator a core:BaseProperty ;
  rdfs:label "Creator"@en ;  
  rdfs:comment "An entity primarily responsible for making the resource. Examples of a creator include a person, an organization, or a service. Typically, the name of a creator should be used to indicate the entity." ;
  rdfs:range core:ListOfProperNames ;
  meta:jsonName "creator" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .  

core:firstUploadedBy a core:BaseProperty ;
  rdfs:label "First uploaded by"@en ;
  rdfs:comment "ID of the user who first uploaded the asset" ;
  meta:repositoryImmutable "true" ;
  rdfs:range xsd:string ;
  meta:jsonName "first_uploaded_by" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .

xmp:CreatorTool a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Creator tool"@en ;
  rdfs:comment "Name of the application which authored the asset." ;
  rdfs:range xmp:AgentName ;
  meta:jsonName "creator_tool" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  rdfs:domain core:Asset .

#### Property section: Asset Modification

xmp:ModifyDate a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Modify Date"@en ;
  rdfs:comment """The date and time when asset content or asset metadata was last modified in the repository. The Date Time property should conform to ISO 8601 standard. An example form is "2004-10-23T12:00:00-06:00".""" ;
  rdfs:range xsd:dateTime ;
  meta:jsonName "modify_date" ;
  meta:access "read" ;
  skos:note "YYYY
			 YYYY-MM
			 YYYY-MM-DD
			 YYYY-MM-DDThh:mmTZD
			 YYYY-MM-DDThh:mm:ssTZD
			 YYYY-MM-DDThh:mm:ss.sTZD" ; 
  skos:example "" ;  # TODO
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .

core:modifiedBy a core:BaseProperty ;
  rdfs:label "Modified By"@en ;
  rdfs:comment "ID of the user who initiated the change that is recorded by ModifyDate." ;
  rdfs:range xsd:string ;
  meta:jsonName "modified_by" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset .    

core:versionID a core:BaseProperty ;
  rdfs:label "Version ID"@en ;
  rdfs:comment "The version ID of the asset. It will be generated both on explicit and implicit save or upload." ;
  rdfs:range xsd:string ;
  meta:repositoryImmutable "true" ;
  meta:jsonName "version_id" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  # TODO TBD 'mandatory'?
  rdfs:domain core:Asset . 

core:versionLabel a core:BaseProperty ;
  rdfs:label "Version label"@en ;
  rdfs:comment "A label given to a version of the asset. It is optional." ;
  rdfs:range xsd:string ;
  meta:jsonName "version_label" ;
  meta:access "read" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  rdfs:domain core:Asset . 

#### Property section: Asset Legal Information

xmpRights:WebStatement a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Web statement"@en ;
  rdfs:comment "A Web URL for a statement of the ownership and usage rights for this resource. This is a normal (non-URI) simple value because of historical usage." ;
  rdfs:range xsd:string ;
  meta:jsonName "web_statement" ;
  meta:access "readwrite" ;
  skos:note "This is a normal (non-URI) simple value because of historical usage" ;
  skos:example "http://creativecommons.org/licenses/by/4.0/" ;
  rdfs:domain core:Asset .

dc:rights a core:BaseProperty ;
  rdfs:label "Rights"@en ;
  rdfs:comment """Information about rights held in and over the resource.Typically, rights information includes a statement about various property rights associated with the resource, including intellectual property rights.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:jsonName "rights" ;
  meta:access "readwrite" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  rdfs:domain core:Asset .

xmpRights:Marked a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Marked"@en ;
  rdfs:comment """When true, indicates that this is a rights-managed resource. When false, indicates that this is a public-domain resource. Omit if the state is unknown.""" ;
  rdfs:range xsd:boolean ;
  meta:jsonName "marked" ;
  meta:access "readwrite" ;
  skos:note "" ;  # TODO
  skos:example "" ;  # TODO
  rdfs:domain core:Asset .

xmpRights:UsageTerms a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Usage Terms"@en ;
  rdfs:comment """A collection of text instructions on how a resource can be legally used, given in a variety of languages.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:jsonName "usage_terms" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset . 
  
plus:CopyrightOwner a core:BaseProperty ;
  rdfs:label "Copyright Owner"@en ;
  rdfs:comment """Owner or owners of the copyright in the licensed asset.""" ;
  rdfs:range plus:ListOfCopyrightOwners ;
  meta:jsonName "copyright_owner" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .  

photoshop:Credit a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Credit"@en ;
  rdfs:comment """Who should be credited when the asset is published.""" ;
  rdfs:range xsd:string ;
  meta:jsonName "credit" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .   
  
cc:license a core:BaseProperty ;
  rdfs:label "License"@en ;
  rdfs:comment """A license is a set of requests/permissions to users of a Work, e.g. a copyright license, the public domain, information for distributors.""" ;
  rdfs:range core:URI ;
  meta:jsonName "license" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .   
  
cc:attributionURL a core:BaseProperty ;
  rdfs:label "Attribution URL"@en ;
  rdfs:comment """For licenses that require attribution, such as some Creative Commons licenses, a URL that identifies the user to which a work should be attributed. When publishing to Behance, we link to the user's profile page.""" ;
  rdfs:range core:URI ;
  meta:jsonName "attribution_url" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .  

cc:attributionName a core:BaseProperty ;
  rdfs:label "Attribution Name"@en ;
  rdfs:comment """For licenses that require attribution, such as some Creative Commons licenses, the user to which a work is attributed. When publishing to Behance, this is taken from the user's Behance profile information.""" ;
  rdfs:range xsd:string ;
  meta:jsonName "attribution_name" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .   
  
xmpMM:ManageUI a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Manage UI"@en ;
  rdfs:comment """A URI that can be used to access information about the managed resource through a web browser.""" ;
  rdfs:range core:URI ;
  meta:jsonName "manage_ui" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .  
  
xmpMM:ManageTo a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Manage To"@en ;
  rdfs:comment """A URI identifying the managed resource to the asset management system; the presence of this property is the formal indication that this resource is managed. The form and content of this URI is private to the asset management system.""" ;
  rdfs:range core:URI ;
  meta:jsonName "manage_to" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .   
  
xmpMM:History a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "History"@en ;
  rdfs:comment """High-level actions that resulted in this resource. It is intended to give human readers a description of the steps taken to make the changes from the previous version to this one. The list should be at an abstract level; it is not intended to be an exhaustive keystroke or other detailed history. The description should be sufficient for metadata management, as well as for workflow enhancement.""" ;
  rdfs:range xmp:ResourceEventList ;
  meta:jsonName "history" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .   
  
plus:CopyrightOwnerID a core:BaseProperty ;
  rdfs:label "Copyright Owner ID"@en ;
  rdfs:comment """ID of the copyright owner. If the PLUS-ID being stored in this property is registered with the PLUS Coalition, it should be expressed as a URL. For example: http://plus-id.org/PLUS-ID.""" ;
  rdfs:range xmp:Text ;
  meta:jsonName "copyright_owner_id" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .  
  
plus:CopyrightOwnerName a core:BaseProperty ;
  rdfs:label "Copyright Owner Name"@en ;
  rdfs:comment """Name of Copyright Owner.""" ;
  rdfs:range xmp:ProperName ;
  meta:jsonName "copyright_owner_name" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .   
  
#### Property section: Asset Description

dc:title a core:BaseProperty ;
  rdfs:label "Title"@en ;
  rdfs:comment """A name given to the resource. Typically, a Title will be a name by which the resource is formally known.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:jsonName "title" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset . 
  
dc:description a core:BaseProperty ;
  rdfs:label "Description"@en ;
  rdfs:comment """An account of the content of the resource. Description may include but is not limited to: an abstract, table of contents, reference to a graphical representation of content or a free-text account of the content.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:jsonName "description" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset . 

dc:format a core:BaseProperty ;
  rdfs:label "Format"@en ;
  rdfs:comment """The physical or digital manifestation of the resource. Typically, Format may include the media-type or dimensions of the resource. Examples of dimensions include size and duration. Format may be used to determine the software, hardware or other equipment needed to display or operate the resource. Recommended best practice is to select a value from a controlled vocabulary (for example, the list of Internet Media Types [http://www.iana.org/ assignments/media-types/] defining computer media formats).""" ;
  rdfs:range xmp:Text ;
  meta:jsonName "media_type" ;
  # TODO TBD 'mandatory'?
  skos:example """“media_type”:“application/vnd.adobe.photoshop”""" ;
  meta:access "read" ;
  rdfs:domain core:Asset .  
  
core:length a core:BaseProperty ;
  rdfs:label "Length"@en ;
  rdfs:comment """Size of the asset in bytes""" ;
  rdfs:range xsd:string ;
  meta:jsonName "length" ;
  # TODO TBD 'mandatory'?
  meta:access "read" ;
  rdfs:domain core:Asset .   
  
core:path a core:BaseProperty ;
  rdfs:label "Path"@en ;
  rdfs:comment """Shows the hierarchy of the asset.The last entry of the path will not be the asset but it will be the parent of the asset. The path semantics should be same as that defined in https://tools.ietf.org/html/rfc3986#section-3.3. In case a repository is not path based then it can return the information which will help in browsing. It could be just an asset id, or something like {catalog}/{id} in case of OZ.""" ;
  rdfs:range xsd:string ;
  meta:jsonName "path" ;
  # TODO TBD 'mandatory'?
  meta:access "read" ;
  rdfs:domain core:Asset .  
  
core:hash a core:BaseProperty ;
  rdfs:label "Hash"@en ;
  rdfs:comment """Hash of the asset along with the algorithm name. Currently only one algorithm is allowed which is md5. If we need to extend the list then it needs to be approved through a process.""" ;
  rdfs:range core:ListOfHash ;
  meta:jsonName "hash" ;
  # TODO TBD 'mandatory'?
  meta:access "read" ;
  rdfs:domain core:Asset .   
  
core:etag a core:BaseProperty ;
  rdfs:label "ETAG"@en ;
  rdfs:comment """An  ETag is an HTTP response header returned by an HTTP/1.1 compliant web server used to determine change in content of a resource at a given URL. """ ;
  rdfs:range xsd:string ;
  meta:jsonName "etag" ;
  meta:access "readwrite" ;
  rdfs:domain core:Asset .  

### Image class

core:Image a rdfs:Class ;
  rdfs:label "Image" ;
  rdfs:comment "OneAdobe Cloud Image Class, JPEG, PNG, etc." ;
  rdfs:subClassOf core:Asset .

#### Image properties 

tiff:Orientation a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Orientation"@en ;
  rdfs:comment """The orientation of the image.""" ;
  rdfs:range tiff:OrientationMode ;
  meta:jsonName "orientation" ;
    meta:access "read" ;
  skos:note """1 = Horizontal (normal)
2 = Mirror horizontal 
3 = Rotate 180 
4 = Mirror vertical 
5 = Mirror horizontal and rotate 270 CW 
6 = Rotate 90 CW 
7 = Mirror horizontal and rotate 90 CW 
8 = Rotate 270 CW""" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .
  
tiff:ImageWidth a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Image Width"@en ;
  rdfs:comment """Image width in pixels.""" ;
  rdfs:range xsd:integer ;
  meta:jsonName "image_width" ;
  meta:access "read" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .  
  
tiff:ImageLength a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Image Length"@en ;
  rdfs:comment """Image height in pixels.""" ;
  rdfs:range xsd:integer ;
  meta:jsonName "image_length" ;
  meta:access "read" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .  

tiff:XResolution a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Image X-Resolution"@en ;
  rdfs:comment """Horizontal resolution in pixels per ResolutionUnit.""" ;
  rdfs:range tiff:Rational ;
  meta:jsonName "x_resolution" ;
  meta:access "read" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .  
  
tiff:YResolution a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Image Y-Resolution"@en ;
  rdfs:comment """Vertical resolution in pixels per ResolutionUnit.""" ;
  rdfs:range tiff:Rational ;
  meta:jsonName "y_resolution" ;
  meta:access "read" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .   

tiff:ResolutionUnit a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Resolution Unit"@en ;
  rdfs:comment """Unit used for XResolution and YResolution.""" ;
  rdfs:range tiff:ResolutionUnitChoice ;
  meta:jsonName "resolution_unit" ;
  meta:access "read" ;
  skos:note """2 = inches
3 = centimeters""" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .   
  
photoshop:ColorMode a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "ColorMode"@en ;
  rdfs:comment """The color mode or image mode determines how colors combine based on the number of channels in a color model. Different color modes result in different levels of color detail and file size. For instance, use CMYK color mode for images in a full-color print brochure, and use RGB color mode for images in web or e-mail to reduce file size while maintaining color integrity.""" ;
  rdfs:range photoshop:ColorModeChoice ;
  meta:jsonName "color_mode" ;
  meta:access "read" ;
  skos:note """0 = Bitmap
1 = Gray scale
2 = Indexed color
3 = RGB color
4 = CMYK color
7 = Multi-channel
8 = Duotone
9 = LAB color""" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .     
  
photoshop:ICCProfile a core:BaseProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "ICCProfile"@en ;
  rdfs:comment """The color profile, such as AppleRGB, AdobeRGB1998.""" ;
  rdfs:range xmp:Text ;
  meta:jsonName "icc_profile" ;
  meta:access "read" ;
  # TODO TBD 'mandatory'?
  rdfs:domain core:Image .     